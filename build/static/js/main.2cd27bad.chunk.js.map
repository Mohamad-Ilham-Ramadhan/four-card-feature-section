{"version":3,"sources":["images/icon-supervisor.svg","images/icon-team-builder.svg","images/icon-karma.svg","images/icon-calculator.svg","components/Card.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Card","title","text","image","color","className","src","alt","App","iconSupervisor","iconTeamBuilder","iconKarma","iconCalculator","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,6C,gBCA3CD,EAAOC,QAAU,IAA0B,+C,gBCA3CD,EAAOC,QAAU,IAA0B,wC,gBCA3CD,EAAOC,QAAU,IAA0B,6C,qICE5B,SAASC,EAAT,GAA8C,IAA9BC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,KAAMC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,MACjD,OACE,yBAAKC,UAAS,4CAAuCD,IACnD,yBAAKC,UAAU,aACb,wBAAIA,UAAU,kCAAkCJ,GAChD,uBAAGI,UAAU,qBAAqBH,GAClC,yBAAKG,UAAU,cACb,yBAAKC,IAAKH,EAAOI,IAAI,GAAGF,UAAU,qB,oECF7B,SAASG,IACtB,OACE,oCACE,yBAAKH,UAAU,aACf,yBAAKA,UAAU,aACf,4BAAQA,UAAU,oBAChB,yBAAKA,UAAU,aACb,wBAAIA,UAAU,+BAAd,gCAGA,wBAAIA,UAAU,mCAAd,yBAGA,uBAAGA,UAAU,iBAAb,6HAMJ,yBAAKA,UAAU,aACf,yBAAKA,UAAU,aACb,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,0BACb,kBAACL,EAAD,CACEC,MAAM,aACNC,KAAK,mDACLC,MAAOM,IACPL,MAAM,aAGV,yBAAKC,UAAU,4CACb,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,2BACb,kBAACL,EAAD,CACEC,MAAM,eACNC,KAAK,wEAELC,MAAOO,IACPN,MAAM,YAGV,yBAAKC,UAAU,4BACf,yBAAKA,UAAU,2BACb,kBAACL,EAAD,CACEC,MAAM,QACNC,KAAK,oDACLC,MAAOQ,IACPP,MAAM,eAKd,yBAAKC,UAAU,gDACb,kBAACL,EAAD,CACEC,MAAM,aACNC,KAAK,oEAELC,MAAOS,IACPR,MAAM,gBCrDAS,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACZ,EAAD,OAEFa,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.2cd27bad.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon-supervisor.8f7824b3.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-team-builder.8a1a6a17.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-karma.ae2dc13d.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-calculator.8e4a5574.svg\";","import React from \"react\";\n\nexport default function Card({ title, text, image, color }) {\n  return (\n    <div className={`card h-100 shadow --bd-top border-${color}`}>\n      <div className=\"card-body\">\n        <h5 className=\"h5 font-weight-bold card-title\">{title}</h5>\n        <p className=\"card-text text-sm\">{text}</p>\n        <div className=\"text-right\">\n          <img src={image} alt=\"\" className=\"card-img-icon\" />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Card from \"./Card\";\nimport iconSupervisor from \"../images/icon-supervisor.svg\";\nimport iconTeamBuilder from \"../images/icon-team-builder.svg\";\nimport iconKarma from \"../images/icon-karma.svg\";\nimport iconCalculator from \"../images/icon-calculator.svg\";\n\nexport default function App() {\n  return (\n    <>\n      <div className=\"mb-5 p-1\"></div>\n      <div className=\"mb-4 p-1\"></div>\n      <header className=\"text-center mb-5\">\n        <div className=\"container\">\n          <h1 className=\"font-weight-light heading-1\">\n            Reliable, efficient delivery\n          </h1>\n          <h2 className=\"font-weight-bold heading-1 mb-4\">\n            Powered by Technology\n          </h2>\n          <p className=\"heading-small\">\n            Our Artificial Intelligence powered tools use millions of project\n            data points to ensure that your project is successful\n          </p>\n        </div>\n      </header>\n      <div className=\"mb-3 p-1\"></div>\n      <div className=\"container\">\n        <div className=\"row align-items-lg-center\">\n          <div className=\"col-lg-4 col-sm-6 mb-4\">\n            <Card\n              title=\"Supervisor\"\n              text=\"Monitor activity to identify project roadblocks.\"\n              image={iconSupervisor}\n              color=\"success\"\n            />\n          </div>\n          <div className=\"col-lg-4 col-sm-12 order-sm-3 order-lg-2\">\n            <div className=\"row align-items-lg-center\">\n              <div className=\"col-sm-6 col-lg-12 mb-4\">\n                <Card\n                  title=\"Team builder\"\n                  text=\"Scans our talent network to create the optimal team for your\n                  project.\"\n                  image={iconTeamBuilder}\n                  color=\"danger\"\n                />\n              </div>\n              <div className=\"w-100 d-none d-lg-block\"></div>\n              <div className=\"col-sm-6 col-lg-12 mb-4\">\n                <Card\n                  title=\"Karma\"\n                  text=\"Regularly evaluates our talent to ensure quality.\"\n                  image={iconKarma}\n                  color=\"warning\"\n                />\n              </div>\n            </div>\n          </div>\n          <div className=\"col-lg-4 col-sm-6 order-sm-2 order-lg-3 mb-4\">\n            <Card\n              title=\"Calculator\"\n              text=\"Uses data from past projects to provide better delivery\n              estimates\"\n              image={iconCalculator}\n              color=\"primary\"\n            />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./style.scss\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}